<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go by Example: Pointers</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
      onkeydown = (e) => {
          
          if (e.key == "ArrowLeft") {
              window.location.href = 'recursion';
          }
          
          
          if (e.key == "ArrowRight") {
              window.location.href = 'structs';
          }
          
      }
  </script>
  <body>
    <div class="example" id="pointers">
      <h2><a href="./">Go by Example</a>: Pointers</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Go mendukung <em><a href="http://en.wikipedia.org/wiki/Pointer_(computer_programming)">pointers</a></em>,
sehingga kita bisa melakukan <em>pass reference</em>
pada sebuah value dan menyimpannya dalam program kita.</p>

          </td>
          <td class="code leading">
            <a href="http://play.golang.org/p/A6bw3issDrj"><img title="Run code" src="play.png" class="run" /></a><img title="Copy code" src="clipboard.png" class="copy" />
          <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Kita akan menunjukkan perbedaan  <em>pointer</em> dengan <em>value</em>
dalam dua fungsi : <code>zeroval</code> dan <code>zeroptr</code>.
<code>zeroval</code> mempunyai parameter <code>int</code>, sehingga argumen
yang akan diberikan ketika fungsi ini dipanggil
harus sebuah <em>value</em>. Fungsi <code>zeroval</code> dalam hal ini
kan mendapatkan sebuah salinan dari <code>ival</code> yang berbeda
dari vairabel yang digunakan sebagai argumen
saat fungsi ini dipanggil.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kd">func</span> <span class="nx">zeroval</span><span class="p">(</span><span class="nx">ival</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">ival</span> <span class="p">=</span> <span class="mi">0</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>zeroptr</code> mempunyai parameter <code>*int</code>, yang berarti
bahwa fungsi ini akan menerima sebuah pointer dari <code>int</code>.
<code>*iptr</code> yang ada di badan fungsi ini akan melakukan
<em>dereference</em> dari pointer tersebut dari alamat memori
sehingga mendapatkan value dari alamat memori tersebut.
Memberikan sebuah vaue pada sebuah <em>deferenced pointer</em> akan
mengubah value pada alamat memori tersebut.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kd">func</span> <span class="nx">zeroptr</span><span class="p">(</span><span class="nx">iptr</span> <span class="o">*</span><span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
    <span class="o">*</span><span class="nx">iptr</span> <span class="p">=</span> <span class="mi">0</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;initial:&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="nx">zeroval</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;zeroval:&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>sintaks <code>&amp;i</code> akan memberikan alamat memori dari <code>i</code>
sebagai contoh sebuah pointer dari <code>i</code>.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="nx">zeroptr</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">i</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;zeroptr:&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Pointer juga dapat ditampilkan seperti ini.</p>

          </td>
          <td class="code">
            
          <div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;pointer:&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">i</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p><code>zeroval</code> tidak mengubah nilai <code>i</code> dalam <code>main</code>,
sedangkan <code>zeroptr</code> mengubahnya karena menggunakan
referensi alamat memori pada variabel &lsquo;i&rsquo; tersebut.</p>

          </td>
          <td class="code">
            
          <div class="highlight"><pre><span class="gp">$</span> go run pointers.go
<span class="go">initial: 1</span>
<span class="go">zeroval: 1</span>
<span class="go">zeroptr: 0</span>
<span class="go">pointer: 0x42131100</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Contoh berikutnya: <a href="structs">Structs</a>.
      </p>
      
      <p class="footer">
        by <a href="https://bumi.dev">satriyop</a> | <a href="https://github.com/satriyop/gobyexample/blob/master/examples/pointers">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
    <script>
      var codeLines = [];
      codeLines.push('package main\u000A');codeLines.push('import \"fmt\"\u000A');codeLines.push('func zeroval(ival int) {\u000A    ival \x3D 0\u000A}\u000A');codeLines.push('func zeroptr(iptr *int) {\u000A    *iptr \x3D 0\u000A}\u000A');codeLines.push('func main() {\u000A    i :\x3D 1\u000A    fmt.Println(\"initial:\", i)\u000A');codeLines.push('    zeroval(i)\u000A    fmt.Println(\"zeroval:\", i)\u000A');codeLines.push('    zeroptr(\x26i)\u000A    fmt.Println(\"zeroptr:\", i)\u000A');codeLines.push('    fmt.Println(\"pointer:\", \x26i)\u000A}\u000A');codeLines.push('');
    </script>
    <script src="site.js" async></script>
  </body>
</html>
