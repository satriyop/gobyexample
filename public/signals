<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go by Example: Signals</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
      onkeydown = (e) => {
          
          if (e.key == "ArrowLeft") {
              window.location.href = 'execing-processes';
          }
          
          
          if (e.key == "ArrowRight") {
              window.location.href = 'exit';
          }
          
      }
  </script>
  <body>
    <div class="example" id="signals">
      <h2><a href="./">Go by Example</a>: Signals</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Kadang kita ingin program Go kita menangani <a href="http://en.wikipedia.org/wiki/Unix_signal">Unix signals</a>.
sebagai contoh kita ingin sebuah server melakukan
shutdown secara graceful ketika menerima sebuah <code>SIGTERM</code>, atau
sebuah tool command-line supaya berhenti memproses input ketika
menerima sebuah <code>SIGINT</code>. Di contoh ini kita akan menangani
signal di Go dengan menggunakan channel.</p>

          </td>
          <td class="code leading">
            <a href="http://play.golang.org/p/JMwICZWE6Hl"><img title="Run code" src="play.png" class="run" /></a><img title="Copy code" src="clipboard.png" class="copy" />
          <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kn">import</span> <span class="p">(</span>
    <span class="s">&quot;fmt&quot;</span>
    <span class="s">&quot;os&quot;</span>
    <span class="s">&quot;os/signal&quot;</span>
    <span class="s">&quot;syscall&quot;</span>
<span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Notifikasi sinyal di Go berjalan dengan mengirimkan
value <code>os.Signal</code> pada sebuah channel. Kita akan
membuat sebuah channel untuk menerima notifikasi
(kita juga akan membuat satu lagi channel untuk
notifikasi ketika program bisa berakhir)</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="nx">sigs</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="nx">os</span><span class="p">.</span><span class="nx">Signal</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="nx">done</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">bool</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>signal.Notify</code> me-register channel yang diberikan
untuk menerima notifikasi dari sinyal yang telah
ditentukan.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="nx">signal</span><span class="p">.</span><span class="nx">Notify</span><span class="p">(</span><span class="nx">sigs</span><span class="p">,</span> <span class="nx">syscall</span><span class="p">.</span><span class="nx">SIGINT</span><span class="p">,</span> <span class="nx">syscall</span><span class="p">.</span><span class="nx">SIGTERM</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Goroutine ini akan mengeksekusi sebuah receive
blocking untuk sinyal-sinyal. Ketika menerima
sebuah sinyal akan menampilkan dan menotifikasi
program bahwa program bisa berakhir.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
        <span class="nx">sig</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">sigs</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">()</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">sig</span><span class="p">)</span>
        <span class="nx">done</span> <span class="o">&lt;-</span> <span class="kc">true</span>
    <span class="p">}()</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Program akan menunggu di sini sampai
menerima sinyal yang diharapkan (sebagaimana
diindikasikan oleh goroutine di atas mengirimkan value
pada channel <code>done</code>) dan kemudian mengakhiri program.</p>

          </td>
          <td class="code">
            
          <div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;awaiting signal&quot;</span><span class="p">)</span>
    <span class="o">&lt;-</span><span class="nx">done</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;exiting&quot;</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Ketika kita menjalankan program ini, program akan
menunggu sebuah sinyal. Dengan menekan <code>ctrl-C</code> (pada
terminal ditampilkan dengan <code>^C</code>) kita bisa mengirimkan
sinyal <code>SIGINT</code>, yang akan mengakibatkan program untuk
menampilkan <code>interrupt</code> dan akhirnya mengakhiri program.</p>

          </td>
          <td class="code">
            
          <div class="highlight"><pre><span class="gp">$</span> go run signals.go
<span class="go">awaiting signal</span>
<span class="go">^C</span>
<span class="go">interrupt</span>
<span class="go">exiting</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Contoh berikutnya: <a href="exit">Exit</a>.
      </p>
      
      <p class="footer">
        by <a href="https://bumi.dev">satriyop</a> | <a href="https://github.com/satriyop/gobyexample/blob/master/examples/signals">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
    <script>
      var codeLines = [];
      codeLines.push('package main\u000A');codeLines.push('import (\u000A    \"fmt\"\u000A    \"os\"\u000A    \"os/signal\"\u000A    \"syscall\"\u000A)\u000A');codeLines.push('func main() {\u000A');codeLines.push('    sigs :\x3D make(chan os.Signal, 1)\u000A    done :\x3D make(chan bool, 1)\u000A');codeLines.push('    signal.Notify(sigs, syscall.SIGINT, syscall.SIGTERM)\u000A');codeLines.push('    go func() {\u000A        sig :\x3D \x3C-sigs\u000A        fmt.Println()\u000A        fmt.Println(sig)\u000A        done \x3C- true\u000A    }()\u000A');codeLines.push('    fmt.Println(\"awaiting signal\")\u000A    \x3C-done\u000A    fmt.Println(\"exiting\")\u000A}\u000A');codeLines.push('');
    </script>
    <script src="site.js" async></script>
  </body>
</html>
