<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go by Example: Timers</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
      onkeydown = (e) => {
          
          if (e.key == "ArrowLeft") {
              window.location.href = 'range-over-channels';
          }
          
          
          if (e.key == "ArrowRight") {
              window.location.href = 'tickers';
          }
          
      }
  </script>
  <body>
    <div class="example" id="timers">
      <h2><a href="./">Go by Example</a>: Timers</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Kita sering ingin mengeksekusi sebuah kode di Go
di saat nanti, atau berulang pada sebuah interval.
<em>timer</em> dan <em>ticker</em> adalah fitur dari Go yang
membuat kedua hal tersebut mudah. Kita akan melihat
timer terlebih dahulu kemudian <a href="tickers">tickers</a>.</p>

          </td>
          <td class="code leading">
            <a href="http://play.golang.org/p/ttpIx6iSabO"><img title="Run code" src="play.png" class="run" /></a><img title="Copy code" src="clipboard.png" class="copy" />
          <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kn">import</span> <span class="p">(</span>
    <span class="s">&quot;fmt&quot;</span>
    <span class="s">&quot;time&quot;</span>
<span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Timer merepresentasikan sebuah event di masa datang.
Kita bisa mengatur seberapa lama timer harus menunggu,
dan timer menyediakan sebuah channel yang akan diberitahu
bila waktunya sudah habis. Timer ini akan menunggu selama
2 detik saja.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="nx">timer1</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">NewTimer</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>kode <code>&lt;-timer.C</code> membuat block pada channel <code>C</code> pada timer
sampai mengirimkan sebuah value yang mengindikasikan bahwa
timer telah dimulai.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="o">&lt;-</span><span class="nx">timer1</span><span class="p">.</span><span class="nx">C</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Timer 1 fired&quot;</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Jika kita ingin menunggu, kita bisa menggunakan
<code>time.Sleep</code>. Satu alasan kenapa sebuah timer berguna
adalah kita bisa membatalkan sebuah timer sebelum
timer tersebut dimulai. Berikut ini contohnya.</p>

          </td>
          <td class="code leading">
            
          <div class="highlight"><pre>    <span class="nx">timer2</span> <span class="o">:=</span> <span class="nx">time</span><span class="p">.</span><span class="nx">NewTimer</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
        <span class="o">&lt;-</span><span class="nx">timer2</span><span class="p">.</span><span class="nx">C</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Timer 2 fired&quot;</span><span class="p">)</span>
    <span class="p">}()</span>
    <span class="nx">stop2</span> <span class="o">:=</span> <span class="nx">timer2</span><span class="p">.</span><span class="nx">Stop</span><span class="p">()</span>
    <span class="k">if</span> <span class="nx">stop2</span> <span class="p">{</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;Timer 2 stopped&quot;</span><span class="p">)</span>
    <span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Memberikan <code>timer2</code> cukup waktu untuk mulai, bilapun
akan terjadi, tapi di program ini akan menunjukkan
bahwa timer telah berhenti.</p>

          </td>
          <td class="code">
            
          <div class="highlight"><pre>    <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Timer pertama akan mulai ~2 detik setelah kita
memulai program, tapi timer kedua seharusnya berhenti
sebelum bahkan timer tersebut mulai.</p>

          </td>
          <td class="code">
            
          <div class="highlight"><pre><span class="gp">$</span> go run timers.go
<span class="go">Timer 1 fired</span>
<span class="go">Timer 2 stopped</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Contoh berikutnya: <a href="tickers">Tickers</a>.
      </p>
      
      <p class="footer">
        by <a href="https://bumi.dev">satriyop</a> | <a href="https://github.com/satriyop/gobyexample/blob/master/examples/timers">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
    <script>
      var codeLines = [];
      codeLines.push('package main\u000A');codeLines.push('import (\u000A    \"fmt\"\u000A    \"time\"\u000A)\u000A');codeLines.push('func main() {\u000A');codeLines.push('    timer1 :\x3D time.NewTimer(2 * time.Second)\u000A');codeLines.push('    \x3C-timer1.C\u000A    fmt.Println(\"Timer 1 fired\")\u000A');codeLines.push('    timer2 :\x3D time.NewTimer(time.Second)\u000A    go func() {\u000A        \x3C-timer2.C\u000A        fmt.Println(\"Timer 2 fired\")\u000A    }()\u000A    stop2 :\x3D timer2.Stop()\u000A    if stop2 {\u000A        fmt.Println(\"Timer 2 stopped\")\u000A    }\u000A');codeLines.push('    time.Sleep(2 * time.Second)\u000A}\u000A');codeLines.push('');
    </script>
    <script src="site.js" async></script>
  </body>
</html>
